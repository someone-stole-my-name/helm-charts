apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "languagetool.fullname" . }}
  labels:
    {{- include "languagetool.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "languagetool.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "languagetool.selectorLabels" . | nindent 8 }}
    spec:
      {{- if and .Values.ngram.enabled }}
      volumes:
        - name: ngram-storage
          persistentVolumeClaim:
            {{- if .Values.ngram.persistence.existingClaim }}
            claimName: "{{ .Values.ngram.persistence.existingClaim }}"
            {{- else }}
            claimName: "{{ .Release.Name }}-ngram-storage"
            {{- end }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "languagetool.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
          {{- if .Values.ngram.enabled }}
            - name: NGRAM_LANGUAGES
              value: "{{ join "," .Values.ngram.languages }}"
          {{- end }}
            - name: JAVAOPTIONS
              value: "{{ .Values.javaOptions }}"
            - name: EXTRAOPTIONS
              value: "{{ .Values.extraOptions }}"
          {{- if .Values.ngram.enabled }}
          volumeMounts:
            - name: ngram-storage
              mountPath: /ngrams
          {{- end }}
          securityContext:
            capabilities:
              drop:
              - ALL
              add:
              - MKNOD
              - SYS_CHROOT
              - CHOWN
              - DAC_OVERRIDE
              - FOWNER
            runAsNonRoot: true
            runAsUser: 65534
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8010
              protocol: TCP
          {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: 9301
              protocol: TCP
          {{- end}}
          livenessProbe:
            httpGet:
              path: /v2/info
              port: http
            {{- if .Values.probeOptions.livenessProbeOptions }}
            {{- toYaml .Values.probeOptions.livenessProbeOptions | nindent 12 }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /v2/info
              port: http
            {{- if .Values.probeOptions.readinessProbeOptions }}
            {{- toYaml .Values.probeOptions.readinessProbeOptions | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
